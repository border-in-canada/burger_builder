{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Open","Close","Logo","BuildControl","Label","Less","More","Input","InputElement","Invalid","Toolbar","DesktopOnly","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","NavigationItems","DrawerToggle","Backdrop","Burger","Modal","Loader","load5","CheckoutSummary","ContactData","Order","aux","props","children","logo","react_default","a","createElement","className","classes","style","height","src","burgerLogo","alt","navigationItem","react_router_dom","to","link","exact","activeClassName","navigationItems","NavigationItem_NavigationItem","drawerToggle","onClick","clicked","toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","NavigationItems_NavigationItems","backdrop","show","sideDrawer","attachedClasses","open","Aux","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchaseable","ordered","nextProps","nextState","console","log","modalClosed","transform","opacity","button","btnType","OrderSummary","ingredientSummary","textTransform","Button_Button","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","resInterceptors","UI_Modal_Modal","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","objectSpread","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelledHandler","purchaseContinuedHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","sum","disabledInfo","orderSummary","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","Burger_OrderSummary_OrderSummary","purchaseCancelHandler","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Input_Input","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","param","err","return","CheckoutSummary_CheckoutSummary","react_router","path","match","render","Checkout_ContactData_ContactData","ingredientName","amount","ingredientOutput","ig","display","border","padding","orders","fetchedOrders","Order_Order","App","hoc_Layout_Layout","component","Orders","BurgerBuilder","Boolean","window","hostname","app","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c367118.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__21TuB\",\"Open\":\"SideDrawer__Open__1pVYR\",\"Close\":\"SideDrawer__Close__3Yv1l\",\"Logo\":\"SideDrawer__Logo__3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\",\"DesktopOnly\":\"Toolbar__DesktopOnly__WADUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__23bcu\",\"active\":\"NavigationItem__active__2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems___yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__26to0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load5\":\"Spinner__load5__3b3Nk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\",\"Input\":\"ContactData__Input__19h-A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport classes from './NavigationItem.css';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n        to={props.link} \n        exact={props.exact} \n        activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n        \n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.css'\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        });\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n    \n};\n\nexport default Layout;","import React, { Component } from 'react';\nimport classes from './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            default: \n                ingredient = null;\n        }\n        return ingredient;\n    }\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient key={igKey + i} type={igKey} />\n        });\n    })\n    .reduce((arr, el) => {\n        return arr.concat(el)\n    }, []);\n\n    if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients!</p>\n    }\n    \n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger; ","import React from 'react';\nimport classes from './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>\n            Less</button>\n        <button className={classes.More} onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'}\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}/>\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchaseable}\n            onClick={props.ordered}>\n            ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Modal.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentWillUpdate () {\n        console.log('[Modal] WillUpdate');\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n                <div className={classes.Modal} style={{\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: this.props.show ? '1' : '0'\n                }}>\n                    {this.props.children}\n                </div>\n             </Aux>\n        );\n    }\n} \n\nexport default Modal;","import React from 'react';\nimport classes from './Button.css';\n\nconst button = (props) => (\n    <button \n    className={[classes.Button, classes[props.btnType]].join(' ')} \n    onClick={props.clicked}\n    disabled={props.disabled} >\n    {props.children}\n    </button>\n);\n\nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    componentWillUpdate() {\n        console.log('[OrderSummary] WillUpdate');\n    }\n\n    render () {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(igKey => {\n            return (\n            <li key={igKey}>\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\n            </li>);\n        });\n        return (\n            <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n            <p>Continue to checkout?</p>\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n        </Aux>\n        );\n    }\n};\n\nexport default OrderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-4c147.firebaseio.com/'\n});\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n)\n    \n\n\nexport default spinner;","import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null,\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error}); \n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptors);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n                \n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state.= {...}\n    //}\n    state = {\n        ingredients: null,\n        totalPrice: 4,\n        purchaseable: false,\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n        axios.get('https://react-my-burger-4c147.firebaseio.com/ingredients.json')\n            .then(response => {\n                this.setState({ingredients: response.data});\n            })\n            .catch(error => {\n                this.setState({error: true})\n            });\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        this.setState({purchaseable: sum > 0});\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients); \n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0){\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelledHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinuedHandler = () => {\n        //alert('You Continue!');\n        // \n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('price=' +   this.state.totalPrice);\n        const queryString = queryParams.join('&');\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        });\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n\n        \n        let burger = this.state.error ? <p>Ingredients can't be loaded</p> : <Spinner />\n        if (this.state.ingredients){\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.state.ingredients}/>\n                    <BuildControls \n                        ingredientAdded={this.addIngredientHandler}\n                        ingredientRemoved={this.removeIngredientHandler}\n                        disabled={disabledInfo} \n                        purchaseable={this.state.purchaseable}\n                        ordered={this.purchaseHandler}\n                        price={this.state.totalPrice}/>\n                </Aux>\n            );\n            orderSummary = <OrderSummary \n                    ingredients={this.state.ingredients} \n                    price={this.state.totalPrice}\n                    purchaseCancelled={this.purchaseCancelledHandler}\n                    purchaseContinued={this.purchaseContinuedHandler} />\n        }\n        if (this.state.loading) {\n            orderSummary = <Spinner />;\n        }\n        \n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes good!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n            btnType='Danger'\n            clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n            btnType='Success'\n            clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses= [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch(props.elementType) {\n        case ('input'):\n            inputElement = <input \n            className={inputClasses.join(' ')} \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}/>;\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n            className={inputClasses.join(' ')}\n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}/>;\n            break;\n        case ('select'):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input \n            className={inputClasses.join(' ')} \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed} />;\n    }\n    return (\n    <div className={classes.Input}>\n        <label className={classes.Label}>{props.label}</label>\n        {inputElement}\n    </div>\n)};\n\nexport default input;","import React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zip Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'email',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your E-mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                valid: true,\n                value: 'fastest',\n                validation: {}\n            }\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({loading: true});\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price, \n            orderData: formData \n        }\n        axios.post('/orders.json', order)\n            .then(response => {\n                this.setState({loading: false});\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                this.setState({loading: false})\n            });\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        updatedFormElement.touched = true;\n        //checks if overall form is valid\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                    key={formElement.id}\n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation}\n                    touched={formElement.config.touched}\n                    changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button disabled={!this.state.formIsValid} btnType='Success'>ORDER</Button>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default ContactData;","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route } from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\n\n\nclass Checkout extends Component {\n    state = {\n        ingredients: null,\n        price: 0\n    } \n\n    componentWillMount() {\n        const query = new URLSearchParams(this.props.location.search);\n        const ingredients = {};\n        let price = 0;\n        for (let param of query.entries()) {\n            if (param[0] === 'price'){\n                price = param[1];\n            } else {\n                ingredients[param[0]] = +param[1];\n            }\n            \n        }\n        this.setState({ingredients: ingredients, totalPrice: price});\n    }\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        return (\n            <div>\n                <CheckoutSummary \n                ingredients={this.state.ingredients}\n                checkoutCancelled={this.checkoutCancelledHandler}\n                checkoutContinued={this.checkoutContinuedHandler} />\n                <Route \n                path={this.props.match.path + '/contact-data'} \n                render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props}/>)}/>\n            </div>\n        );\n    }\n}\n\nexport default Checkout;","import React from 'react';\nimport classes from './Order.css';\n\nconst order = (props) => {\n    const ingredients = [];\n    \n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {name: ingredientName, amount: props.ingredients[ingredientName]}\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n        style={{\n            textTransform: 'capitalize',\n            display: 'inline-block',\n            margin: '0 8px',\n            border: '1px solid #ccc',\n            padding: '5px'\n        }}\n        key={ig.name}>{ig.name} ({ig.amount})</span>\n    })\n\n    return (\n    <div className={classes.Order}>\n        <p>Ingredients: {ingredientOutput}</p>\n        <p>Price: <strong>{props.price.toFixed(2)}</strong></p>\n    </div>\n    );\n}\n\nexport default order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount () {\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                this.setState({loading: false, orders: fetchedOrders});\n            })\n            .catch(err => {\n                this.setState({loading: false});\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={+order.price} />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout}/> \n            <Route path=\"/orders\" component={Orders}/> \n            <Route path=\"/\" exact component={BurgerBuilder}/>\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}